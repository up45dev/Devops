# Multi-stage build para Angular
FROM node:18-alpine AS build

# Configurar diretório de trabalho
WORKDIR /app

# Copiar arquivos de configuração
COPY frontend/package*.json ./

# Instalar dependências
RUN npm ci --only=production

# Copiar código fonte
COPY frontend/ .

# Build da aplicação
RUN npm run build --prod

# Imagem final com Nginx
FROM nginx:alpine

# Instalar ferramentas de monitoramento
RUN apk add --no-cache curl

# Copiar configuração personalizada do Nginx
COPY devops/nginx/nginx.conf /etc/nginx/nginx.conf
COPY devops/nginx/default.conf /etc/nginx/conf.d/default.conf

# Copiar aplicação buildada
COPY --from=build /app/dist/* /usr/share/nginx/html/

# Configurar permissões
RUN chown -R nginx:nginx /usr/share/nginx/html && chmod -R 755 /usr/share/nginx/html

# Expor porta
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost/health || exit 1

# Comando de inicialização
CMD ["nginx", "-g", "daemon off;"]
